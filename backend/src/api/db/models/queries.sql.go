// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: queries.sql

package models

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createAccount = `-- name: CreateAccount :exec
INSERT INTO account (hash) VALUES ($1)
`

func (q *Queries) CreateAccount(ctx context.Context, hash []byte) error {
	_, err := q.db.Exec(ctx, createAccount, hash)
	return err
}

const moneroWallet = `-- name: MoneroWallet :one
SELECT monero_wallet FROM account WHERE hash = $1
`

func (q *Queries) MoneroWallet(ctx context.Context, hash []byte) (pgtype.Text, error) {
	row := q.db.QueryRow(ctx, moneroWallet, hash)
	var monero_wallet pgtype.Text
	err := row.Scan(&monero_wallet)
	return monero_wallet, err
}

const setMoneroWallet = `-- name: SetMoneroWallet :exec
UPDATE account
SET monero_wallet = $2
WHERE hash = $1
`

type SetMoneroWalletParams struct {
	Hash         []byte
	MoneroWallet pgtype.Text
}

func (q *Queries) SetMoneroWallet(ctx context.Context, arg SetMoneroWalletParams) error {
	_, err := q.db.Exec(ctx, setMoneroWallet, arg.Hash, arg.MoneroWallet)
	return err
}
